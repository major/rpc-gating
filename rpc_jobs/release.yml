- job:
    name: RE-Release
    project-type: workflow
    concurrent: false
    properties:
      - build-discarder:
          num-to-keep: 30
    parameters:
      - rpc_gating_params
      - string:
          name: RELEASE_VERSION
          description: |
            The version that will be tagged by this job
      - string:
          name: NEXT_VERSION
          description: |
            The version that will be released after the next stabalisation
            period.
      - string:
          name: MAINLINE
          description: The mainline branch to work from
      - string:
          name: REPO_NAME
          description: |
            Name of the working github repo. The rpc-jenkins-svc github user
            must have push access to this repo.
      - string:
          name: ORG_NAME
          description: |
            Name of the Organisation or user that owns REPO_NAME.
          default: rcbops
      - string:
          name: STAGES
          description: |
            Items to run. Options:
              Tag,
              Update RC Branch
          default: >-
            Tag,
            Update RC Branch,
            Post RC-cut branch update
    dsl: |
      stage("Check Parameters"){
        if (env.REPO_NAME == "" || env.ORG_NAME == "" || env.MAINLINE == ""){
          throw new Exception(
            "REPO_NAME, ORG_NAME and MAINLINE parameters are required.")
        }
        print ("Parameter check successful.")
      }
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.shared_slave(){
        repo_url="git@github.com:${owner}/${repo}"
        rc = "${MAINLINE}-rc"
        stage("Configure Git"){
          release.configure_git()
        }
        stage("Clone"){
          release.clone(repo_url)
        }
        common.conditionalStage(
          stage_name: "Pre RC-cut branch update",
          stage: {{
              release.branch_update_script(
                "scripts/pre_rc_cut.sh",
                env.NEXT_VERSION,
                env.MAINLINE,
                "Pre_RC_cut",
                env.REPO_NAME,
                env.ORG_NAME

              )
            }}
        )
        common.conditionalStage(
          stage_name: "Tag",
          stage: {{
            release.tag(RELEASE_VERSION, rc)
          }}
        )
        common.conditionalStage(
          stage_name: "Reset RC Branch",
          stage: {{
            release.reset_rc_branch(repo_url, MAINLINE, rc)
          }}
        )
        common.conditionalStage(
          stage_name: "Post RC-cut branch update",
          stage: {{
              release.branch_update_script(
                "scripts/post_rc_cut.sh",
                env.NEXT_VERSION,
                env.MAINLINE,
                "Post_RC_cut",
                env.REPO_NAME,
                env.ORG_NAME
              )
            }}
        )
      }}
